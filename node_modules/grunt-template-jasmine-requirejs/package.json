{
  "name": "grunt-template-jasmine-requirejs",
  "version": "0.1.10",
  "description": "Requirejs template for grunt-contrib-jasmine",
  "main": "src/template-jasmine-requirejs.js",
  "scripts": {
    "test": "grunt test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/cloudchen/grunt-template-jasmine-requirejs"
  },
  "keywords": [
    "grunt",
    "template",
    "requirejs",
    "jasmine",
    "test"
  ],
  "author": {
    "name": "Cloud Chen",
    "email": "cloudcmh@gmail.com"
  },
  "contributors": [
    {
      "name": "Gunnar A. Reinseth",
      "email": "gar@prepost.net"
    },
    {
      "name": "Tim Snadden",
      "email": "tim@snadden.com"
    },
    {
      "name": "James Pamplin",
      "email": "james@jamespamplin.com"
    },
    {
      "name": "Jarrod Overson",
      "email": "joverson@onehealth.com"
    },
    {
      "name": "Jarrod Overson",
      "email": "jsoverson@gmail.com"
    },
    {
      "name": "Cina S",
      "email": "cinas@spiceworks.com"
    },
    {
      "name": "tmartensen",
      "email": "travis.martensen@gmail.com"
    },
    {
      "name": "Kevin Chiu",
      "email": "korprulu9@gmail.com"
    },
    {
      "name": "Ohgyun Ahn",
      "email": "ohgyun@gmail.com"
    },
    {
      "name": "Ross-Hunter",
      "email": "ross-hunter@ross-hunter.com"
    },
    {
      "name": "Celso Ulises Juarez Ramirez",
      "email": "celsojuarez@gmail.com"
    },
    {
      "name": "Kevin Chiu",
      "email": "kevin@readmoo.com"
    },
    {
      "name": "Zach Dennis",
      "email": "zach.dennis@gmail.com"
    },
    {
      "name": "reinseth",
      "email": "gar@prepost.net"
    },
    {
      "name": "Ben",
      "email": "benjamin.livermore@cengage.com"
    },
    {
      "name": "Ben Livermore",
      "email": "benjamin.livermore@cengage.com"
    },
    {
      "name": "Ghn",
      "email": "ghugon@gmail.com"
    },
    {
      "name": "E.J. Dyksen",
      "email": "ej@dyksen.net"
    },
    {
      "name": "Brian Ng",
      "email": "bng@prospricing.com"
    }
  ],
  "license": "BSD",
  "peerDependencies": {
    "grunt-contrib-jasmine": "~0.5.3"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.4",
    "grunt-contrib-watch": "~0.1.4",
    "grunt": "~0.4.1",
    "grunt-contrib-jasmine": "~0.5.3",
    "grunt-contrib-connect": "~0.2.0",
    "grunt-bump": "0.0.13",
    "grunt-npm": "0.0.2"
  },
  "readme": "RequireJS template for Jasmine unit tests [![Build Status](https://travis-ci.org/cloudchen/grunt-template-jasmine-requirejs.png?branch=master)](https://travis-ci.org/cloudchen/grunt-template-jasmine-requirejs)\n-----------------------------------------\n\n## Conflict with `grunt-contrib-jasmine` 0.6.x\nThe host package of this template has been upgraded to 0.6.x, which enables Jasmine 2.0 support.\n\nUnfortunately, there's major conflict which can't be solved by code changes.\n\nYou cannot use this template in conjunction with 0.6.x of `grunt-contrib-jasmine` until the host package fixes that conflict.\n\nWe released v0.1.9 patch version with strict `peerDependencies` of host package to notify version conflict.\n\nIf you meet that error message, please downgrade your `grunt-contrib-jasmine` to `~0.5.3` by running below command:\n\n```\nnpm install grunt-contrib-jasmine@0.5.3 --save-dev\n```\n\n## Installation\n```\nnpm install grunt-template-jasmine-requirejs --save-dev\n```\n\n## Template Options\n\n### templateOptions.version\nType: `String`\nOptions: `2.0.0` to `2.1.10` or path to a local file system version(relative to Gruntfile.js). Absolute path is allowed as well. Default: latest requirejs version included\n\nThe version of requirejs to use.\n\n### templateOptions.requireConfigFile\nType `String` or `Array`\n\nThis can be a single path to a require config file or an array of paths to multiple require config files. The configuration is extracted from the require.config({}) call(s) in the file, and is passed into the require.config({}) call in the template.\n\nFiles are loaded from left to right (using a deep merge). This is so you can have a main config and then override specific settings in additional config files (like a test config) without having to duplicate entire requireJS configs.\n\nIf `requireConfig` is also specified then it will be deep-merged onto the settings specified by this directive.\n\n### templateOptions.requireConfig\nType: `Object`\n\nThis object is `JSON.stringify()`-ed ( **support serialize Function object** ) into the template and passed into `var require` variable\n\nIf `requireConfigFile` is specified then it will be loaded first and the settings specified by this directive will be deep-merged onto those.\n\n\n## Sample usage\n\n```js\n// Example configuration using a single requireJS config file\ngrunt.initConfig({\n  connect: {\n    test : {\n      port : 8000\n    }\n  },\n  jasmine: {\n    taskName: {\n      src: 'src/**/*.js',\n      options: {\n        specs: 'spec/*Spec.js',\n        helpers: 'spec/*Helper.js',\n        host: 'http://127.0.0.1:8000/',\n        template: require('grunt-template-jasmine-requirejs'),\n        templateOptions: {\n          requireConfigFile: 'src/main.js'\n        }\n      }\n    }\n  }\n});\n```\n\n```js\n// Example configuration using an inline requireJS config\ngrunt.initConfig({\n  connect: {\n    test : {\n      port : 8000\n    }\n  },\n  jasmine: {\n    taskName: {\n      src: 'src/**/*.js',\n      options: {\n        specs: 'spec/*Spec.js',\n        helpers: 'spec/*Helper.js',\n        host: 'http://127.0.0.1:8000/',\n        template: require('grunt-template-jasmine-requirejs'),\n        templateOptions: {\n          requireConfig: {\n            baseUrl: 'src/',\n            paths: {\n              \"jquery\": \"path/to/jquery\"\n            },\n            shim: {\n              'foo': {\n                deps: ['bar'],\n                exports: 'Foo',\n                init: function (bar) {\n                  return this.Foo.noConflict();\n                }\n              }\n            },\n            deps: ['jquery'],\n            callback: function($) {\n              // do initialization stuff\n              /*\n\n              */\n            }\n          }\n        }\n      }\n    }\n  }\n});\n```\n\n\n\n```js\n// Example using a base requireJS config file and specifying\n// overrides with an inline requireConfig file.\ngrunt.initConfig({\n  connect: {\n    test : {\n      port : 8000\n    }\n  },\n  jasmine: {\n    taskName: {\n      src: 'src/**/*.js',\n      options: {\n        specs: 'spec/*Spec.js',\n        helpers: 'spec/*Helper.js',\n        host: 'http://127.0.0.1:8000/',\n        template: require('grunt-template-jasmine-requirejs'),\n        templateOptions: {\n          requireConfigFile: 'src/main.js',\n          requireConfig: {\n            baseUrl: 'overridden/baseUrl',\n            shim: {\n              // foo will override the 'foo' shim in main.js\n              'foo': {\n                deps: ['bar'],\n                exports: 'Foo'\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n});\n```\n\n```js\n// Example using a multiple requireJS config files. Useful for\n// testing.\ngrunt.initConfig({\n  connect: {\n    test : {\n      port : 8000\n    }\n  },\n  jasmine: {\n    taskName: {\n      src: 'src/**/*.js',\n      options: {\n        specs: 'spec/*Spec.js',\n        helpers: 'spec/*Helper.js',\n        host: 'http://127.0.0.1:8000/',\n        template: require('grunt-template-jasmine-requirejs'),\n        templateOptions: {\n          requireConfigFile: ['src/config.js', 'spec/config.js']\n          requireConfig: {\n            baseUrl: 'overridden/baseUrl'\n          }\n        }\n      }\n    }\n  }\n});\n```\n\n\n*Note* the usage of the 'connect' task configuration. You will need to use a task like\n[grunt-contrib-connect][] if you need to test your tasks on a running server.\n\n[grunt-contrib-connect]: https://github.com/gruntjs/grunt-contrib-connect\n\n## RequireJS notes\n\nIf you end up using this template, it's worth looking at the\n[source]() in order to familiarize yourself with how it loads your files. The load process\nconsists of a series of nested `require` blocks, incrementally loading your source and specs:\n\n```js\nrequire([*YOUR SOURCE*], function() {\n  require([*YOUR SPECS*], function() {\n    require([*GRUNT-CONTRIB-JASMINE FILES*], function() {\n      // at this point your tests are already running.\n    }\n  }\n}\n```\n\nIf \"callback\" function is defined in requireConfig, above code will be injected to the end of body of \"callback\" definition\n```js\ntemplateOptions: {\n  callback: function() {\n    // suppose we define a module here\n    define(\"config\", {\n      \"endpoint\": \"/path/to/endpoint\"\n    })\n  }\n}\n```\nGenerated runner page with require configuration looks like:\n```js\nvar require = {\n  ...\n  callback: function() {\n    // suppose we define a module here\n    define(\"config\", {\n      \"endpoint\": \"/path/to/endpoint\"\n    })\n\n    require([*YOUR SOURCE*], function() {\n      require([*YOUR SPECS*], function() {\n        require([*GRUNT-CONTRIB-JASMINE FILES*], function() {\n          // at this point your tests are already running.\n        }\n      }\n    }\n  }\n  ...\n}\n```\nThis automation can help to avoid unexpected dependency order issue\n\n## Change Log\n* v0.1.10 03.14.14, Fixed [#53](https://github.com/cloudchen/grunt-template-jasmine-requirejs/pull/53), [#52](https://github.com/cloudchen/grunt-template-jasmine-requirejs/issues/52), [#46](https://github.com/cloudchen/grunt-template-jasmine-requirejs/issues/46), [#36](https://github.com/cloudchen/grunt-template-jasmine-requirejs/issues/36) wrong path error when runner outfile is specified at elsewhere\n* v0.1.9, 02.04.14, [#57](https://github.com/cloudchen/grunt-template-jasmine-requirejs/issues/57) prevents conflict with `grunt-contrib-jasmine` 0.6.x, added requirejs 2.1.9 & 2.1.10\n\n### Authors / Maintainers\n\n- Jarrod Overson (@jsoverson)\n- Cloud Chen (@cloudchen)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/cloudchen/grunt-template-jasmine-requirejs/issues"
  },
  "homepage": "https://github.com/cloudchen/grunt-template-jasmine-requirejs",
  "_id": "grunt-template-jasmine-requirejs@0.1.10",
  "dist": {
    "shasum": "e6b44b878eeb9fb2ab363294688dd428cf270fb8"
  },
  "_from": "grunt-template-jasmine-requirejs@~0.1.0",
  "_resolved": "https://registry.npmjs.org/grunt-template-jasmine-requirejs/-/grunt-template-jasmine-requirejs-0.1.10.tgz"
}
